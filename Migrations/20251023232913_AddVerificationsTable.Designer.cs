// <auto-generated />
using System;
using ContractMonthlyClaimSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContractMonthlyClaimSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251023232913_AddVerificationsTable")]
    partial class AddVerificationsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Claim", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimID"));

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal>("HoursWorked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClaimID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Claims", (string)null);
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            HourlyRate = 367.50m,
                            Name = "Diploma in Software Development"
                        },
                        new
                        {
                            DepartmentID = 2,
                            HourlyRate = 422.00m,
                            Name = "Bachelor in Information Technology"
                        },
                        new
                        {
                            DepartmentID = 3,
                            HourlyRate = 423.55m,
                            Name = "Higher Certificate In Networking"
                        },
                        new
                        {
                            DepartmentID = 4,
                            HourlyRate = 369.42m,
                            Name = "Diploma in Web Development"
                        });
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.SupportingDocument", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentID"));

                    b.Property<int>("ClaimID")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentID");

                    b.HasIndex("ClaimID");

                    b.ToTable("SupportingDocuments", (string)null);
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.UserAccount", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UserID");

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.ToTable("UserAccounts", (string)null);
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Verification", b =>
                {
                    b.Property<int>("VerificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VerificationID"));

                    b.Property<int>("ClaimID")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VerifiedBy")
                        .HasColumnType("int");

                    b.HasKey("VerificationID");

                    b.HasIndex("ClaimID");

                    b.HasIndex("VerifiedBy");

                    b.ToTable("Verification", (string)null);
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Claim", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.Employee", "Employee")
                        .WithMany("Claims")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Employee", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.SupportingDocument", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.Claim", "Claim")
                        .WithMany("SupportingDocuments")
                        .HasForeignKey("ClaimID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.UserAccount", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.Employee", "Employee")
                        .WithOne("UserAccount")
                        .HasForeignKey("ContractMonthlyClaimSystem.Models.UserAccount", "EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Verification", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.Claim", "Claim")
                        .WithMany("Verifications")
                        .HasForeignKey("ClaimID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ContractMonthlyClaimSystem.Models.Employee", "VerifiedByEmployee")
                        .WithMany("Verifications")
                        .HasForeignKey("VerifiedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("VerifiedByEmployee");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Claim", b =>
                {
                    b.Navigation("SupportingDocuments");

                    b.Navigation("Verifications");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Employee", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("UserAccount");

                    b.Navigation("Verifications");
                });
#pragma warning restore 612, 618
        }
    }
}
