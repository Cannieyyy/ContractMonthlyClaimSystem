@model ContractMonthlyClaimSystem.Models.RegisterViewModel
@{
    ViewData["Title"] = "Login / Register";
}

<div class="hero-section  text-center">
    <h1 class="display-3 fw-bold">Time2Pay Portal</h1>
    <p class="lead text-light">Login or Register to manage your monthly claims efficiently.</p>
</div>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="auth-card">
                <!-- Tabs -->
                <ul class="nav nav-tabs justify-content-center mb-4" id="authTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="login-tab" data-bs-toggle="tab" data-bs-target="#login" type="button" role="tab" aria-controls="login" aria-selected="true">
                            Login
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="register-tab" data-bs-toggle="tab" data-bs-target="#register" type="button" role="tab" aria-controls="register" aria-selected="false">
                            Register
                        </button>
                    </li>
                </ul>

                <!-- Tab Content -->
                <div class="tab-content" id="authTabsContent">
                    <!-- Login Form -->
                    <div class="tab-pane fade show active" id="login" role="tabpanel" aria-labelledby="login-tab">
                        <form asp-controller="Home" asp-action="Login" method="post">
                            @Html.AntiForgeryToken()

                            @if (ViewBag.ErrorMessage != null)
                            {
                                <div class="alert alert-danger text-center" role="alert">
                                    @ViewBag.ErrorMessage
                                </div>
                            }

                            <div class="form-floating mb-3">
                                <input name="email" type="email" class="form-control" id="loginEmail" placeholder="name@example.com" required>
                                <label for="loginEmail">Email address</label>
                            </div>

                            <div class="form-floating mb-4">
                                <input name="password" type="password" class="form-control" id="loginPassword" placeholder="Password" required>
                                <label for="loginPassword">Password</label>
                            </div>

                            <button type="submit" class="btn w-100 auth-btn">Login</button>
                        </form>
                    </div>

                    <!-- Register Form -->
                    <div class="tab-pane fade" id="register" role="tabpanel" aria-labelledby="register-tab">
                        @* Use asp-action to post to HomeController.Register *@
                        <form asp-action="Register" asp-controller="Home" method="post" novalidate>
                            @Html.AntiForgeryToken()
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                            <div class="form-floating mb-3">
                                <input asp-for="Name" class="form-control" id="employeeName" placeholder="Full Name" />
                                <label for="employeeName">Full Name</label>
                                <span asp-validation-for="Name" class="text-danger" id="danger"></span>
                            </div>

                            <div class="form-floating mb-3">
                                <input asp-for="Email" class="form-control" id="employeeEmail" placeholder="Email" />
                                <label for="employeeEmail">Email</label>
                                <span asp-validation-for="Email" class="text-danger" id="danger"></span>
                            </div>

                            <div class="form-floating mb-3">
                                @* Departments populated from ViewBag.Departments in controller *@
                                <select asp-for="DepartmentID"
                                        class="form-select"
                                        asp-items="@(new Microsoft.AspNetCore.Mvc.Rendering.SelectList(ViewBag.Departments, "DepartmentID", "Name"))"
                                        id="employeeDepartment" aria-label="Department">
                                    <option value="">-- Select Department --</option>
                                </select>
                                <label for="employeeDepartment">Department</label>
                                <span asp-validation-for="DepartmentID" class="text-danger" id="danger"></span>
                            </div>

                            <div class="form-floating mb-4">
                                <select asp-for="Role" class="form-select" id="employeeRole" aria-label="Role">
                                    <option value="">-- Select Role --</option>
                                    <option value="Lecturer">Lecturer</option>
                                    <option value="Coordinator">Coordinator</option>
                                    <option value="Manager">Manager</option>
                                </select>
                                <label for="employeeRole">Role</label>
                                <span asp-validation-for="Role" class="text-danger" id="danger"></span>
                            </div>

                            <!-- OTP Notification and Send Button (hidden initially) -->
                            <div id="otpNotifyContainer" style="display: none;" class="mb-4">
                                <small class="text-info d-block mb-2">
                                    Since you selected a privileged role, a One-Time Pin (OTP) will be sent to your department manager.
                                    Please request it from them to complete registration.
                                </small>
                                <button type="button" id="sendOtpBtn" class="btn w-100 auth-btn">Send OTP to Manager</button>
                            </div>

                            <!-- OTP Input (hidden initially) -->
                            <div class="form-floating mb-4" id="otpContainer" style="display: none;">
                                <input asp-for="OtpCode" class="form-control" id="otpInput" placeholder="Enter OTP" type="text" />
                                <label for="otpInput">One-Time Pin</label>
                            </div>

                            <div class="form-floating mb-4">
                                <input asp-for="Password" class="form-control" id="registerPassword" placeholder="Password" type="password" />
                                <label for="registerPassword">Password</label>
                                <span asp-validation-for="Password" class="text-danger" id="danger"></span>
                            </div>

                            <div class="form-floating mb-4">
                                <input asp-for="ConfirmPassword" class="form-control" id="registerConfirmPassword" placeholder="Confirm Password" type="password" />
                                <label for="registerConfirmPassword">Confirm Password</label>
                                <span asp-validation-for="ConfirmPassword" class="text-danger" id="danger"></span>
                            </div>

                            <button type="submit" id="registerSubmit" class="btn w-100 auth-btn">Register</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @* jquery-validation unobtrusive scripts *@
    <partial name="_ValidationScriptsPartial" />
    <script>
        sendOtpBtn.addEventListener('click', async function () {
            const email = document.getElementById('employeeEmail').value;
            const departmentSelect = document.getElementById('employeeDepartment');
            const departmentId = departmentSelect ? departmentSelect.value : '';

            if (!email) { alert('Enter your email first'); return; }

            const tokenElem = document.querySelector('input[name="__RequestVerificationToken"]');
            const token = tokenElem ? tokenElem.value : '';

            const formData = new FormData();
            formData.append('email', email);
            formData.append('departmentId', departmentId);

            try {
                sendOtpBtn.disabled = true;
                sendOtpBtn.textContent = 'Sending...';

                const resp = await fetch('@Url.Action("SendOtp", "Home")', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': token
                    }
                });

                // Always attempt to read the response as text (works with JSON too)
                const text = await resp.text();

                if (resp.ok) {
                    // try parse JSON message if it's JSON, else show text
                    try {
                        const data = JSON.parse(text);
                        alert(data.message || JSON.stringify(data));
                    } catch (e) {
                        alert(text || 'OTP sent successfully.');
                    }
                    return;
                } else {
                    // not OK — show server-sent message (or default)
                    const messageToShow = text || 'Failed to send OTP (server returned ' + resp.status + ')';
                    alert('Failed to send OTP: ' + messageToShow);
                    return;
                }
            } catch (ex) {
                // network or JS error
                alert('An unexpected error occurred while sending OTP: ' + (ex.message || ex));
            } finally {
                sendOtpBtn.disabled = false;
                sendOtpBtn.textContent = 'Send OTP to Manager';
            }
        });

    </script>
    
}
